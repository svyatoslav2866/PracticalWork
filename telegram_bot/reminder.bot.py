import telebot
from telebot import types
import requests
import json

TOKEN = "7151635814:AAFf6wnLE6JzMU6nyK0X8pkMtJeQLyjNpzA"
bot = telebot.TeleBot(TOKEN)
API = '857ac1d10f3746518fd7b208382889f5'

user_favorites = {}

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! üëã –≠—Ç–æ—Ç –±–æ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –¥–ª—è —Ç–æ–≥–æ, "
                          "\n—á—Ç–æ –±—ã –≤—ã –º–æ–≥–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–≥–æ–¥—É –≤ —Å–≤–æ–µ–º –≥–æ—Ä–æ–¥–µ –∏–ª–∏ –≤ –ª—é–±–æ–º –¥—Ä—É–≥–æ–º ‚úèÔ∏è"
                          "\n–≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞")
    show_main_menu(message.chat.id)


def show_main_menu(chat_id):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –≥–æ—Ä–æ–¥ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ')
    btn2 = types.KeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –≥–æ—Ä–æ–¥–∞')
    btn3 = types.KeyboardButton('–í—ã–≤–µ—Å—Ç–∏ –ø–æ–≥–æ–¥—É –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤')
    btn4 = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å –≥–æ—Ä–æ–¥ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ')
    markup.row(btn1, btn2, btn3, btn4)
    bot.send_message(chat_id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=markup)


@bot.message_handler(func=lambda message: True)
def handle_all_message(message):
    chat_id = message.chat.id
    text = message.text.strip()

    if text == '–î–æ–±–∞–≤–∏—Ç—å –≥–æ—Ä–æ–¥ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ':
        msg = bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:", reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(msg, add_to_favorites)

    elif text == '–ü–æ–∫–∞–∑–∞—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –≥–æ—Ä–æ–¥–∞':
        show_favorites(chat_id)

    elif text == '–í—ã–≤–µ—Å—Ç–∏ –ø–æ–≥–æ–¥—É –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤':
        show_favorite_weather(chat_id)

    elif text == '–£–¥–∞–ª–∏—Ç—å –≥–æ—Ä–æ–¥ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ':
        msg = bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ.", reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(msg, remove_from_favorites)

    else:
        get_weather(message)

def get_weather(message):
    city = message.text.strip().lower()
    res = requests.get(f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={API}&units=metric')
    data = res.json()
    if data.get('cod') == 200:
        temp = data["main"]["temp"]
        wind_speed = data["wind"]["speed"]
        weather_conditions = data["weather"][0]["description"]
        bot.reply_to(message, f'–°–µ–π—á–∞—Å –ø–æ–≥–æ–¥–∞: –≤ {city} {temp}‚ÑÉ'
                            f'\n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed} –º/—Å'
                            f'\n–ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è: {weather_conditions}')

    else:
        bot.reply_to(message, f'–¢–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ {city} –Ω–µ—Ç!')

def add_to_favorites(message):
    city = message.text.strip().lower()
    user_id = message.chat.id

    res = requests.get(f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={API}')
    if res.status_code != 200:
        bot.send_message(user_id, f'–ì–æ—Ä–æ–¥ {city} –Ω–µ –Ω–∞–π–¥–µ–Ω.')
        show_main_menu(user_id)
        return

    if user_id not in user_favorites:
        user_favorites[user_id] = []

    if city not in user_favorites[user_id]:
        user_favorites[user_id].append(city)
        bot.send_message(user_id, f'–ì–æ—Ä–æ–¥ {city.capitalize()} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!')
    else:
        bot.send_message(user_id, f'–ì–æ—Ä–æ–¥ {city.capitalize()} —É–∂–µ –µ—Å—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º!')

    show_main_menu(user_id)

def remove_from_favorites(message):
    city = message.text.strip().lower()
    user_id = message.chat.id

    if user_id in user_favorites and city in user_favorites[user_id]:
        user_favorites[user_id].remove(city)
        bot.send_message(user_id, f'–ì–æ—Ä–æ–¥ {city.capitalize()} —É–¥–∞–ª–µ–Ω –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ!')
    else:
        bot.send_message(user_id, f'–ì–æ—Ä–æ–¥ {city.capitalize()} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º.')

    show_main_menu(user_id)

def show_favorites(chat_id):
    if chat_id in user_favorites and user_favorites[chat_id]:
        cities = "\n".join([city.capitalize() for city in user_favorites[chat_id]])
        bot.send_message(chat_id, f"–í–∞—à–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –≥–æ—Ä–æ–¥–∞:\n{cities}")
    else:
        bot.send_message(chat_id, "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤.")
    show_main_menu(chat_id)

def show_favorite_weather(chat_id):
    if chat_id not in user_favorites or not user_favorites[chat_id]:
        bot.send_message(chat_id, "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤.")
        show_main_menu(chat_id)
        return

    for city in user_favorites[chat_id]:
        res = requests.get(f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={API}&units=metric')
        if res.status_code == 200:
            data = res.json()
            temp = data["main"]["temp"]
            wind_speed = data["wind"]["speed"]
            weather_conditions = data["weather"][0]["description"]
            bot.send_message(chat_id, f'–°–µ–π—á–∞—Å –ø–æ–≥–æ–¥–∞: –≤ {city} {temp}‚ÑÉ'
                                       f'\n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed} –º/—Å'
                                       f'\n–ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è: {weather_conditions}')
        else:
            bot.send_message(chat_id, f'–ì–æ—Ä–æ–¥ {city} –Ω–µ –Ω–∞–π–¥–µ–Ω.')

    show_main_menu(chat_id)

bot.polling()
